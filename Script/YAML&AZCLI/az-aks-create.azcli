 az ad sp create-for-rbac --name myAKSClusterServicePrincipal
 # myAKSClusterServicePrincipal 서비스 주체 생성
 # Home - Microsoft Entra ID - Enterprise applications(Application type == All)
 # 최초 실행 시 로컬컴퓨터 AZ  CLI 실행

 

az aks create --resource-group AzureFridayAKS -name AzureFridayAKS \
--enable-addons monitoring, http_application_routing \
--kubernetes-version 1.15.4 -generate-ssh-keys \
--service-principal 7d33fe42-b226-4369-87ab-e7af25a633b --client-secret ab944635-02a5-4fa0-8278-9500f0d333b --node-count 3 \
--vm-set-type VirtualMachineScaleSets \
--load-balancer-sku standard \
--enable-cluster-autoscaler \
--min-count 1 \
--max-count 5

# az CLI 명령을 텍스트로 요약한 것입니다.

# az aks create 명령을 사용하여 AzureFridayAKS라는 이름의 Kubernetes 클러스터를 만듭니다.
# --resource-group 옵션을 사용하여 클러스터를 만들 Resource Group을 지정합니다.
# --name 옵션을 사용하여 클러스터의 이름을 지정합니다.
# --enable-addons 옵션을 사용하여 클러스터에 모니터링 및 HTTP 애플리케이션 라우팅 추가 기능을 사용하도록 설정합니다.
# --kubernetes-version 옵션을 사용하여 클러스터의 Kubernetes 버전을 지정합니다.
# -generate-ssh-keys 옵션을 사용하여 SSH 키를 생성합니다.
# --service-principal 옵션을 사용하여 클러스터에 서비스 주체를 사용하여 인증합니다.
# --node-count 옵션을 사용하여 클러스터의 노드 수를 지정합니다.
# -vm-set-type 옵션을 사용하여 VM 집합 유형을 지정합니다.
# --load-balancer-sku 옵션을 사용하여 로드 밸런서 SKU를 지정합니다.
# --enable-cluster-autoscaler 옵션을 사용하여 클러스터 자동 확장기를 사용하도록 설정합니다.
# -min-count 옵션을 사용하여 클러스터 자동 확장기의 최소 노드 수를 지정합니다.
# --max-count 옵션을 사용하여 클러스터 자동 확장기의 최대 노드 수를 지정합니다.

# 이 명령을 사용하여 Azure Kubernetes Service(AKS) 클러스터를 신속하게 만들 수 있습니다.



az aks get-credentials --resource-group AzureFridayAKS --name AzureFridayAKS
az acr create --resource-group AzureFridayAKS --name AzureFridayACR --sku Basic --admin-enabled true
az aks get-credentials --resource-group AzureFridayAKS --name AzureFridayAKS
az acr build --registry AzureFridayACR --image react-clock-basic:v1


# az aks get-credentials 명령을 사용하여 AzureFridayAKS 클러스터에 대한 인증 토큰을 가져옵니다.
# az acr create 명령을 사용하여 AzureFridayACR이라는 이름의 Azure Container Registry를 만듭니다.
# az aks get-credentials 명령을 사용하여 AzureFridayAKS 클러스터에 대한 인증 토큰을 다시 가져옵니다.
# az acr build 명령을 사용하여 react-clock-basic:v1 이미지를 AzureFridayACR 레지스트리에 빌드합니다.
# 다음은 각 명령을 자세히 설명합니다.

# az aks get-credentials

# 이 명령은 Azure Kubernetes Service(AKS) 클러스터에 대한 인증 토큰을 가져옵니다. 인증 토큰을 사용하면 kubectl 명령을 사용하여 클러스터에 액세스할 수 있습니다.

# az aks get-credentials --resource-group AzureFridayAKS --name AzureFridayAKS
# 이 명령은 다음과 같은 옵션을 사용합니다.

# --resource-group 옵션은 인증 토큰을 가져올 Resource Group을 지정합니다.
# --name 옵션은 인증 토큰을 가져올 클러스터의 이름을 지정합니다.
# az acr create

# 이 명령은 Azure Container Registry를 만듭니다. Azure Container Registry는 컨테이너 이미지를 저장하고 관리하는 컨테이너 레지스트리입니다.

# az acr create --resource-group AzureFridayAKS --name AzureFridayACR --sku Basic --admin-enabled true
# 이 명령은 다음과 같은 옵션을 사용합니다.

# --resource-group 옵션은 레지스트리를 만들 Resource Group을 지정합니다.
# --name 옵션은 레지스트리의 이름을 지정합니다.
# --sku 옵션은 레지스트리의 SKU를 지정합니다.
# --admin-enabled 옵션은 레지스트리에 관리자 액세스를 사용하도록 설정합니다.
# az aks get-credentials

# 이 명령은 이전에 가져온 인증 토큰을 다시 가져옵니다.

# az aks get-credentials --resource-group AzureFridayAKS --name AzureFridayAKS
# 이 명령은 다음과 같은 옵션을 사용합니다.

# --resource-group 옵션은 인증 토큰을 가져올 Resource Group을 지정합니다.
# --name 옵션은 인증 토큰을 가져올 클러스터의 이름을 지정합니다.
# az acr build

# 이 명령은 Dockerfile을 사용하여 컨테이너 이미지를 빌드합니다. Dockerfile은 컨테이너 이미지를 만드는 데 필요한 지침을 포함하는 텍스트 파일입니다.

# az acr build --registry AzureFridayACR image react-clock-basic:v1
# 이 명령은 다음과 같은 옵션을 사용합니다.

# --registry 옵션은 이미지를 빌드할 레지스트리의 이름을 지정합니다.
# --image 옵션은 빌드할 이미지의 이름과 태그를 지정합니다.
# 이 명령은 react-clock-basic:v1 이미지를 AzureFridayACR 레지스트리에 빌드합니다. 이 이미지는 React로 만든 간단한 시계 애플리케이션을 포함합니다.